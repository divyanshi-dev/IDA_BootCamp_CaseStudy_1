{
	"name": "source_to_raw_div_cs1",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "StartTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select * from ControlTable_Div where SourcePath='source-datasets/o8_master_data_case_study/';",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Control_table_div_cs1",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Div_cs1_source_dataset",
									"type": "DatasetReference",
									"parameters": {
										"SourcePath": {
											"value": "@item().SourcePath",
											"type": "Expression"
										},
										"FileName": {
											"value": "@item().NewFileName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Div_cs1_source_to_raw",
									"type": "DatasetReference",
									"parameters": {
										"TargetPath": {
											"value": "@item().TargetPath\n",
											"type": "Expression"
										},
										"FileName": {
											"value": "@item().NewFileName",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EndTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertPipelineRunStatus]",
					"storedProcedureParameters": {
						"EndTime": {
							"value": {
								"value": "@variables('EndTime1')",
								"type": "Expression"
							},
							"type": "String"
						},
						"PL_Name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"PL_RunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"PL_TriggerTime": {
							"value": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"PL_TriggerType": {
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							},
							"type": "String"
						},
						"StartTime": {
							"value": {
								"value": "@variables('StartTime1')",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "CaseStudy2",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "StartTime",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "StartTime1",
					"value": {
						"value": "@utcNow()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "EndTime",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "EndTime1",
					"value": {
						"value": "@utcNow()",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"StartTime1": {
				"type": "String"
			},
			"EndTime1": {
				"type": "String"
			},
			"StartTime2": {
				"type": "String"
			},
			"EndTime2": {
				"type": "String"
			},
			"StartTime3": {
				"type": "String"
			},
			"EndTime3": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Divyanshi_Case_Study_1"
		},
		"annotations": [],
		"lastPublishTime": "2024-11-11T07:55:22Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}