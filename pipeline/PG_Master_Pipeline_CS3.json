{
	"name": "PG_Master_Pipeline_CS3",
	"properties": {
		"activities": [
			{
				"name": "If Condition2",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('full_load'),0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Execute Incremental Pipeline",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PG_Incremental_Pipeline_CS3",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"frequency": {
										"value": "@pipeline().parameters.frequency",
										"type": "Expression"
									},
									"country_code": {
										"value": "@pipeline().parameters.country_code",
										"type": "Expression"
									},
									"config_id": {
										"value": "@pipeline().parameters.config_id",
										"type": "Expression"
									},
									"triggerNow": {
										"value": "@pipeline().parameters.triggerNow",
										"type": "Expression"
									}
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Copying data to Temp landing",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "source_ds_pg",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "templanding_data_pg",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Bronze Full Load Ingestion",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Get Metadata of Full Load",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/pravallika.gajul@shell.com/Bronze_Transformation_Full_Load_PG"
							},
							"linkedServiceName": {
								"referenceName": "LS_DB_PG",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Delete Bronze Landing Files",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Bronze Full Load Ingestion",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "templanding_data_pg",
									"type": "DatasetReference"
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Copying data from temp landing to bronze",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copying data to Temp landing",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"additionalColumns": [
										{
											"name": "load_id",
											"value": {
												"value": "@variables('load_id')",
												"type": "Expression"
											}
										},
										{
											"name": "file_name",
											"value": "$$FILENAME"
										}
									],
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": "pravallika-pg/templanding/uc3",
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".csv"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "templanding_data_pg",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "bronze_data_pg",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Silver Full Load Ingestion",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Delete Bronze Landing Files",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/pravallika.gajul@shell.com/Silver_Transformation_PG"
							},
							"linkedServiceName": {
								"referenceName": "LS_DB_PG",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Gold Full Load Ingestion",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Silver Full Load Ingestion",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/pravallika.gajul@shell.com/Gold_Transformation_Full_Load_PG"
							},
							"linkedServiceName": {
								"referenceName": "LS_DB_PG",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Stored procedure for Bronze",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Bronze Full Load Ingestion",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[Ingestion_Log_Details_PG]",
								"storedProcedureParameters": {
									"country_code": {
										"value": {
											"value": "@pipeline().parameters.country_code",
											"type": "Expression"
										},
										"type": "String"
									},
									"end_time": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"file_date": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"file_name": {
										"value": {
											"value": "@activity('Get Metadata of Full Load').output.childItems[0].name",
											"type": "Expression"
										},
										"type": "String"
									},
									"file_size": {
										"value": {
											"value": "@variables('file_size')",
											"type": "Expression"
										},
										"type": "String"
									},
									"frequency": {
										"value": {
											"value": "@pipeline().parameters.triggerNow",
											"type": "Expression"
										},
										"type": "String"
									},
									"layer": {
										"value": "Bronze",
										"type": "String"
									},
									"load_date": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"load_id": {
										"value": {
											"value": "@variables('load_id')",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"start_time": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"status": {
										"value": {
											"value": "@activity('Bronze Full Load Ingestion').status\r\n",
											"type": "Expression"
										},
										"type": "String"
									},
									"total_rows_inserted": {
										"value": {
											"value": "@variables('total_rows')",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL_PG",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Get Metadata of Full Load",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "Set total rows",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "bronze_data_pg",
									"type": "DatasetReference"
								},
								"fieldList": [
									"childItems",
									"itemName",
									"lastModified"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Set file size",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copying data from temp landing to bronze",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "file_size",
								"value": {
									"value": "@activity('Copying data to Temp landing').output.dataWritten",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set total rows",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set file size",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "total_rows",
								"value": {
									"value": "@activity('Copying data from temp landing to bronze').output.rowsCopied",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Stored procedure for Silver",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Silver Full Load Ingestion",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[Ingestion_Log_Details_PG]",
								"storedProcedureParameters": {
									"country_code": {
										"value": {
											"value": "@pipeline().parameters.country_code",
											"type": "Expression"
										},
										"type": "String"
									},
									"end_time": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"file_date": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"file_name": {
										"value": {
											"value": "@activity('Get Metadata of Full Load').output.childItems[0].name",
											"type": "Expression"
										},
										"type": "String"
									},
									"file_size": {
										"value": {
											"value": "@variables('file_size')",
											"type": "Expression"
										},
										"type": "String"
									},
									"frequency": {
										"value": {
											"value": "@pipeline().parameters.triggerNow",
											"type": "Expression"
										},
										"type": "String"
									},
									"layer": {
										"value": "Silver",
										"type": "String"
									},
									"load_date": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"load_id": {
										"value": {
											"value": "@variables('load_id')",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"start_time": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"status": {
										"value": {
											"value": "@activity('Silver Full Load Ingestion').status\n",
											"type": "Expression"
										},
										"type": "String"
									},
									"total_rows_inserted": {
										"value": {
											"value": "@variables('total_rows')",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL_PG",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Stored procedure for Gold",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Gold Full Load Ingestion",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[Ingestion_Log_Details_PG]",
								"storedProcedureParameters": {
									"country_code": {
										"value": {
											"value": "@pipeline().parameters.country_code",
											"type": "Expression"
										},
										"type": "String"
									},
									"end_time": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"file_date": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"file_name": {
										"value": {
											"value": "@activity('Get Metadata of Full Load').output.childItems[0].name",
											"type": "Expression"
										},
										"type": "String"
									},
									"file_size": {
										"value": {
											"value": "@variables('file_size')",
											"type": "Expression"
										},
										"type": "String"
									},
									"frequency": {
										"value": {
											"value": "@pipeline().parameters.triggerNow",
											"type": "Expression"
										},
										"type": "String"
									},
									"layer": {
										"value": "Gold",
										"type": "String"
									},
									"load_date": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"load_id": {
										"value": {
											"value": "@variables('load_id')",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"start_time": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"status": {
										"value": {
											"value": "@activity('Gold Full Load Ingestion').status\n",
											"type": "Expression"
										},
										"type": "String"
									},
									"total_rows_inserted": {
										"value": {
											"value": "@variables('total_rows')",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL_PG",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "LookupCurrentLoad",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT COUNT(*) AS Rowscount \nFROM uc3_data_PG.data_table_PG;\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Data_Table_PG",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "LookupCurrentLoad",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "full_load",
					"value": {
						"value": "@activity('LookupCurrentLoad').output.firstRow.Rowscount",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"config_id": {
				"type": "int",
				"defaultValue": 1
			},
			"country_code": {
				"type": "string",
				"defaultValue": "IN"
			},
			"frequency": {
				"type": "string",
				"defaultValue": "Daily"
			},
			"triggerNow": {
				"type": "int",
				"defaultValue": 0
			}
		},
		"variables": {
			"pipeline_run": {
				"type": "Integer",
				"defaultValue": 0
			},
			"load_id": {
				"type": "Integer",
				"defaultValue": 1
			},
			"full_load": {
				"type": "Integer",
				"defaultValue": 1
			},
			"file_size": {
				"type": "Integer",
				"defaultValue": 0
			},
			"total_rows": {
				"type": "Integer",
				"defaultValue": 0
			}
		},
		"folder": {
			"name": "UC3_PG"
		},
		"annotations": [],
		"lastPublishTime": "2024-11-11T18:13:26Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}